/*
 * File: app/view/fssp/fsspViewController.js
 *
 * This file was generated by Sencha Architect version 3.5.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Portal.view.fssp.fsspViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.fsspfssp',

    onBtnSaveClick: function(button, e, eOpts) {
        var refs = this.getReferences(),
            formInput = refs.formInput;

        this.getView().mask('Регистрация... Подождите...');
        formInput.submit({
            clientValidation: true,
            url: 'data/fssp/save.php',
            scope: this,
            success: function(form, action) {
                this.getView().unmask();
                var result = Portal.util.Util.decodeJSON(action.response.responseText);
                Ext.Msg.show({
                    title:'Запись!',
                    msg: result.msg,
                    icon: Ext.Msg.INFO,
                    buttons: Ext.Msg.OK
                });
            },
            failure: function(form, action) {
                this.getView().unmask();
                Portal.util.Util.handleFormFailure(action);
            }
        });

    },

    onDateBeginExpand: function(field, eOpts) {
        //var dt = new Date();
        //field.maxValue = Ext.Date.format(dt, 'd-m-Y');
        //console.log(Ext.Date.format(dt, 'd-m-Y'));
        //console.log(field);
        //field.maxValue = Ext.Date.format(dt, 'd-m-Y');

    },

    onBtnCalcClick: function(button, e, eOpts) {
        var refs = this.getReferences(),
            formResult = refs.formResult,
            tableResult = refs.tableResult;

        formResult.getForm().load({
            params:{
                dateBegin: formResult.getForm().findField('dateBegin').getValue(),
                dateEnd: formResult.getForm().findField('dateEnd').getValue(),
                Otdel:  formResult.getForm().findField('Otdel').getValue()
            }
        });

        var mainD = Ext.getStore('fssp.table');
        mainD.load({
            params:{
                dateBegin: formResult.getForm().findField('dateBegin').getValue(),
                dateEnd: formResult.getForm().findField('dateEnd').getValue(),
                Otdel:  formResult.getForm().findField('Otdel').getValue()
            }
        });
        tableResult.setDisabled(false);
    },

    onFsspAfterRender: function(component, eOpts) {
        var AccessEdit = Portal.util.Util.appAccessEdit(this.getView().xtype);

        var refs = this.getReferences(),
            tabDataInput = refs.tabDataInput,
            fsspTabPanel = refs.fsspTabPanel;

        fsspTabPanel.setActiveTab(1);
        tabDataInput.setHidden( !AccessEdit );
    }

});

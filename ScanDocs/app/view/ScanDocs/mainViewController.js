/*
 * File: app/view/ScanDocs/mainViewController.js
 *
 * This file was generated by Sencha Architect version 4.1.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.2.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.2.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Portal.view.ScanDocs.mainViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.scandocsmain',

    ShowCadNums: function(filter) {
        var r=this.getReferences(),
            frm=r.formPanel.getForm(),
            o=r.FilterOpis.getValue(),
            fr=r.FilterRetro.getValue(),
            s=r.seek.getValue();
        Ext.getStore('ScanDocs.MainData').load({params:{
        dateBegin:frm.findField('dateBegin').getValue(),
        dateEnd:frm.findField('dateEnd').getValue(),
        Otdel:frm.findField('Otdel').getValue(),
        cyear:'',opis:o,retro:fr,filter:s}});
    },

    onCalcClick: function(button, e, eOpts) {
        var r=this.getReferences(),f=r.formPanel.getForm();
        r.detailPanel.getForm().setValues({
            count_dpd:'считаю...',
            count_opis:'считаю...',
            count_retro:'считаю...'
        });

        r.detailPanel.getForm().load({
            params:{
                dateBegin:f.findField('dateBegin').getValue(),
                dateEnd:f.findField('dateEnd').getValue(),
                Otdel:f.findField('Otdel').getValue(),
                cyear:f.findField('cyear').getValue()
            }
        });
        this.onButtonClick();
    },

    onResetClick: function(button, e, eOpts) {
        var r=this.getReferences();
        r.formPanel.getForm().reset();
        r.detailPanel.getForm().load();
        Ext.getStore('ScanDocs.MainData').load();
    },

    onPTbarChange: function(pagingtoolbar, pageData, eOpts) {
        var r=this.getReferences(),
            frm=r.formPanel.getForm(),
            o=r.FilterOpis.getValue(),
            fr=r.FilterRetro.getValue(),
            s=r.seek.getValue();
        Ext.getStore('ScanDocs.MainData').getProxy().setConfig({extraParams:{
            dateBegin:frm.findField('dateBegin').getValue(),
            dateEnd:frm.findField('dateEnd').getValue(),
            Otdel:frm.findField('Otdel').getValue(),
        cyear:'',opis:o,retro:fr,filter:s}});
    },

    onTextfieldSpecialkey: function(field, e, eOpts) {
        if(e.getKey()===e.ENTER){this.onButtonClick();}
    },

    onButtonClick: function(button, e, eOpts) {
        this.ShowCadNums();
    },

    onFilterOpisChange: function(field, newValue, oldValue, eOpts) {
        this.ShowCadNums();
    },

    onFilterRetroChange: function(field, newValue, oldValue, eOpts) {
        this.ShowCadNums();
    },

    onPanelAfterRender: function(component, eOpts) {
        var AccessEdit = Portal.util.Util.appAccessEdit(this.getView().xtype),
            ref=this.getReferences();
        ref.TabMain.setActiveTab(ref.TabStat);
        //ref.TabError.setHidden( !AccessEdit );
        ref.detailPanel.getForm().load();
        Ext.getStore('ScanDocs.MainData').load();
    }

});

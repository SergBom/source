/*
 * File: app/view/EGRP/main.js
 *
 * This file was generated by Sencha Architect version 4.1.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.2.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.2.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Portal.view.EGRP.main', {
   extend: 'Ext.panel.Panel',
   alias: 'widget.egrpmain',

   requires: [
      'Portal.view.EGRP.mainViewModel',
      'Portal.view.EGRP.mainViewController',
      'Ext.grid.Panel',
      'Ext.grid.column.Column',
      'Ext.view.Table',
      'Ext.tab.Panel',
      'Ext.panel.Tool'
   ],

   controller: 'egrp.main',
   viewModel: {
      type: 'egrp.main'
   },
   height: 479,
   width: 598,
   layout: 'border',
   title: 'My Panel',

   items: [
      {
         xtype: 'gridpanel',
         region: 'west',
         split: true,
         width: 150,
         collapsible: true,
         title: 'Меню',
         bind: {
            store: '{menu}'
         },
         columns: [
            {
               xtype: 'gridcolumn',
               flex: 1,
               dataIndex: 'name',
               text: ''
            }
         ],
         listeners: {
            itemclick: 'onItemClick'
         }
      },
      {
         xtype: 'tabpanel',
         region: 'center',
         reference: 'MainPanel',
         scrollable: 'both',
         title: 'Открыть в отдельном окне. Нажмите на значок -->',
         titleAlign: 'right',
         activeTab: 0,
         tools: [
            {
               xtype: 'tool',
               tooltip: 'Развернуть в отдельном окне',
               tooltipType: 'title',
               type: 'maximize',
               listeners: {
                  click: 'onToolClick'
               }
            }
         ]
      }
   ],
   listeners: {
      afterrender: 'onMainAfterRender'
   }

});
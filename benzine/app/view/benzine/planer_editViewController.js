/*
 * File: app/view/benzine/planer_editViewController.js
 *
 * This file was generated by Sencha Architect version 4.1.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Portal.view.benzine.planer_editViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.benzineplaner_edit',

    onTableBenzineTourSelectionChange: function(model, selected, eOpts) {
        this.getReferences().btnBenzineFormPlanerTourDelete.setDisabled(selected.length === 0);
    },

    onTableBenzineTourItemDblClick: function(dataview, record, item, index, e, eOpts) {
        var edit=Ext.create('Portal.view.benzine.Tour_Edit').show();
        edit.getReferences().formTourEdit.getForm().loadRecord(record);
    },

    onBtnBenzineFormPlanerTourAddClick: function(button, e, eOpts) {
        var tour_id=this.getReferences().formPlaner.getValues().id,
            edit=Ext.create('Portal.view.benzine.Tour_Edit').show();
        edit.getReferences().formTourEdit.getForm().setValues({
            id: 0,
            tour_id:tour_id
        });
    },

    onBtnBenzineFormPlanerTourDeleteClick: function(button, e, eOpts) {
        var record = this.getReferences().gridTour.getSelectionModel().getSelection(),
            store = Ext.getStore('benzine.tour');
        Portal.util.Util.deleteRecord(record,store);
    },

    onBtnBenzinePlanerTourSuccessClick: function(button, e, eOpts) {
        var me = this,
            id = me.getReferences().formPlaner.getValues().id;
        Ext.Msg.show({
            title:'Внимание',
            message: 'Данным действием Вы подтверждаете, что данная поездка состоялась в полном объеме!',
            buttons: Ext.Msg.YESNO,
            icon: Ext.Msg.QUESTION,
            fn: function(btn) {
                if (btn === 'yes') {
                    me.getView().mask('Подождите...');
                    Ext.Ajax.request({
                        url: 'data/benzine/planer-confirm.php',
                        params: {
                            id: id,
                            confirm: true
                        },
                        success: function(response){
                            Ext.getStore('benzine.planer').reload();
                        }
                    });
                    me.getView().unmask();
                    me.getView().close();
                }
            }
        });
    },

    onBtnBenzinePlanerSaveClick: function(button, e, eOpts) {
        var me = this,
            formPlaner = me.getReferences().formPlaner,
            values = formPlaner.getValues();

        if(Ext.getStore('benzine.tour').getCount()===0){
            Portal.util.Util.showErrorMsg('Вы не заполнили маршрут');
        }else{
            if (formPlaner.isValid()) {
                me.getView().mask('Подождите...');
                values.new=0;
                Ext.Ajax.request({
                    url: 'data/benzine/planer-edit1.php',
                    params: values,
                    success: function(response){
                        Ext.getStore('benzine.planer').reload();
                    }
                });
                me.getView().unmask();
                me.getView().close();
            }
        }
    },

    onBtnBenzinePanerCancelClick: function(button, e, eOpts) {
        values = this.getReferences().formPlaner.getValues();
        if(values.new==1){
            Ext.Ajax.request({
                url: 'data/benzine/planer-delete.php',
                params: values,
                success: function(r){}
            });
        }
        this.getView().close();
    },

    onBenzineplaner_editShow: function(component, eOpts) {
        Ext.getStore('benzine.tour').load({
            params:{
                tour_id:this.getReferences().formPlaner.getValues().id
            }
        });
    }

});

/*
 * File: app/view/DCV/Settings.js
 *
 * This file was generated by Sencha Architect version 4.1.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.2.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.2.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Portal.view.DCV.Settings', {
    extend: 'Ext.window.Window',
    alias: 'widget.dcv.settings',

    requires: [
        'Portal.view.DCV.SettingsViewModel',
        'Portal.view.DCV.SettingsViewController',
        'Ext.tab.Panel',
        'Ext.tab.Tab',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.toolbar.Toolbar',
        'Ext.grid.plugin.RowEditing',
        'Ext.grid.column.Boolean'
    ],

    controller: 'dcv.settings',
    viewModel: {
        type: 'dcv.settings'
    },
    modal: true,
    height: 457,
    width: 557,
    layout: 'fit',
    iconCls: 'icon-setting',
    title: 'Настройки',
    maximizable: true,
    defaultListenerScope: true,

    items: [
        {
            xtype: 'tabpanel',
            border: false,
            width: 100,
            activeTab: 0,
            tabPosition: 'left',
            tabRotation: 0,
            items: [
                {
                    xtype: 'panel',
                    layout: 'border',
                    title: 'Справочники',
                    items: [
                        {
                            xtype: 'gridpanel',
                            region: 'west',
                            split: true,
                            reference: 'tRefs',
                            width: 306,
                            bind: {
                                store: '{refs}'
                            },
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    flex: 1,
                                    dataIndex: 'reference',
                                    text: 'Справочник'
                                }
                            ],
                            dockedItems: [
                                {
                                    xtype: 'toolbar',
                                    dock: 'top',
                                    items: [
                                        {
                                            xtype: 'button',
                                            reference: 'btnAddRef',
                                            disabled: true,
                                            iconCls: 'icon-add'
                                        },
                                        {
                                            xtype: 'button',
                                            reference: 'btnDelRef',
                                            disabled: true,
                                            iconCls: 'icon-delete'
                                        },
                                        {
                                            xtype: 'button',
                                            reference: 'btnRefreshRefs',
                                            iconCls: 'icon-refresh',
                                            listeners: {
                                                click: 'onRefreshRefs'
                                            }
                                        }
                                    ]
                                }
                            ],
                            listeners: {
                                selectionchange: 'onGridpanelSelectionChange'
                            },
                            plugins: [
                                {
                                    ptype: 'rowediting'
                                }
                            ]
                        },
                        {
                            xtype: 'gridpanel',
                            region: 'center',
                            split: true,
                            reference: 'tRefer',
                            bind: {
                                store: '{refer}'
                            },
                            columns: [
                                {
                                    xtype: 'booleancolumn',
                                    flex: 0,
                                    dataIndex: 'bool',
                                    text: 'Boolean'
                                }
                            ],
                            dockedItems: [
                                {
                                    xtype: 'toolbar',
                                    dock: 'top',
                                    items: [
                                        {
                                            xtype: 'button',
                                            reference: 'btnAddRecRef',
                                            disabled: true,
                                            iconCls: 'icon-add',
                                            listeners: {
                                                click: 'onAddRecRef'
                                            }
                                        },
                                        {
                                            xtype: 'button',
                                            reference: 'btnDelRecRef',
                                            disabled: true,
                                            iconCls: 'icon-delete',
                                            listeners: {
                                                click: 'onDelRecRef'
                                            }
                                        },
                                        {
                                            xtype: 'button',
                                            reference: 'btnRefreshRef',
                                            disabled: true,
                                            iconCls: 'icon-refresh',
                                            listeners: {
                                                click: 'onRefreshRef'
                                            }
                                        }
                                    ]
                                }
                            ],
                            plugins: [
                                {
                                    ptype: 'rowediting',
                                    listeners: {
                                        edit: 'onRowEditingEdit',
                                        beforeedit: 'onRowEditingBeforeEdit'
                                    }
                                }
                            ],
                            listeners: {
                                selectionchange: 'onGridpanelSelectionChange1'
                            }
                        }
                    ]
                },
                {
                    xtype: 'panel',
                    title: 'Адреса'
                },
                {
                    xtype: 'panel',
                    title: 'Пользователи'
                }
            ]
        }
    ],
    listeners: {
        afterrender: {
            fn: 'onWindowAfterRender',
            scope: 'controller'
        }
    },

    onRefreshRefs: function(button, e, eOpts) {
        this.getViewModel().getStore('refs').reload();
    },

    onGridpanelSelectionChange: function(model, selected, eOpts) {
        var r=this.getReferences(),
            refer=r.tRefer,
            st=this.getViewModel().getStore('refer'),
            stFld=this.getViewModel().getStore('fields'),
            nc=[];
        stFld.load({params:{table:selected[0].data.name}});
        stFld.on('load',function(stRef,r,s){
            stFld.each(function(rec){
                var tmp={
                    dataIndex: rec.data.dataIndex,
                    header: rec.data.header,
                    tooltip: rec.data.tooltip,
                    name: rec.data.name,
                    //xtype: rec.data.xtype,
                    width:rec.data.width,
                    flex:rec.data.flex,
                    disabled:false
                    };
                if(rec.data.dataIndex!='id'){
                    tmp.editor={xtype:'textfield'};
                }
                //console.log(tmp);
                nc.push(tmp);
            });
            refer.reconfigure(st,nc);
        },this);
        st.load({params:{table:selected[0].data.name}});

        r.btnDelRef.setDisabled(selected.length===0);
        //r.btnDelRecRef.setDisabled(selected.length===0);
        r.btnAddRecRef.setDisabled(selected.length===0);
        r.btnRefreshRef.setDisabled(selected.length===0);
    },

    onAddRecRef: function(button, e, eOpts) {
        var st=this.getViewModel().getStore('refer'),
            ref=this.getReferences(),
            tR=ref.tRefer,//plgs=tR.findPlugin('rowediting'),
            md=st.getModel();
        st.insert(0,{id:0});
        tR.getView().select(0);
        //plgs.doFireEvent('edit',[]); //startEdit(md);
    },

    onDelRecRef: function(button, e, eOpts) {
        var r=this.getReferences(),
            s=this.getViewModel().getStore('refer'),
            t=r.tRefs.getSelection()[0].data.name,
            id=r.tRefer.getSelection()[0].data.id;
        Portal.util.Util.deleteRecord2({id:id,t:t},s,'data/DCV/refer-del.php','');
    },

    onRefreshRef: function(button, e, eOpts) {
        this.getViewModel().getStore('refer').reload();
    },

    onRowEditingEdit: function(editor, context, eOpts) {
        var r=this.getReferences(),
            st=this.getViewModel().getStore('refer'),
            stR=r.tRefs.getSelection()[0].data.name;
        context.newValues._t=stR;
        Ext.Ajax.request({
            url:'data/DCV/refer-upd.php',
            params:context.newValues,
            success:function(r){st.reload();}
        });
        r.btnDelRecRef.setDisabled(true);
        r.btnAddRecRef.setDisabled(false);
        r.btnRefreshRef.setDisabled(false);
    },

    onRowEditingBeforeEdit: function(editor, context, eOpts) {
        var r=this.getReferences();
        r.btnDelRecRef.setDisabled(true);
        r.btnAddRecRef.setDisabled(true);
        r.btnRefreshRef.setDisabled(true);
    },

    onGridpanelSelectionChange1: function(model, selected, eOpts) {
        this.getReferences().btnDelRecRef.setDisabled(selected.length===0);
    }

});
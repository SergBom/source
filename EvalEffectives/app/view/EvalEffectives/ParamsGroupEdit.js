/*
 * File: app/view/EvalEffectives/ParamsGroupEdit.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.2.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.2.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Portal.view.EvalEffectives.ParamsGroupEdit', {
    extend: 'Ext.window.Window',
    alias: 'widget.evaleffectivesparamsgroupedit',

    requires: [
        'Portal.view.EvalEffectives.ParamsGroupEditViewModel',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.form.Panel',
        'Ext.form.field.ComboBox',
        'Ext.form.field.Hidden',
        'Ext.form.field.Checkbox'
    ],

    viewModel: {
        type: 'evaleffectivesparamsgroupedit'
    },
    modal: true,
    height: 141,
    width: 500,
    layout: 'fit',
    title: 'My Window',
    defaultListenerScope: true,

    dockedItems: [
        {
            xtype: 'toolbar',
            dock: 'bottom',
            items: [
                {
                    xtype: 'container',
                    items: [
                        {
                            xtype: 'button',
                            iconCls: 'dialog-save',
                            text: 'Сохранить',
                            listeners: {
                                click: 'onButtonClick1'
                            }
                        },
                        {
                            xtype: 'button',
                            iconCls: 'dialog-cancel',
                            text: 'Отмена',
                            listeners: {
                                click: 'onButtonClick'
                            }
                        }
                    ]
                }
            ]
        }
    ],
    items: [
        {
            xtype: 'form',
            reference: 'form',
            bodyPadding: 10,
            items: [
                {
                    xtype: 'combobox',
                    anchor: '100%',
                    name: 'rec_id',
                    editable: false,
                    autoLoadOnValue: true,
                    displayField: 'R',
                    valueField: 'id',
                    bind: {
                        store: '{storeParamsGroup}'
                    }
                },
                {
                    xtype: 'hiddenfield',
                    anchor: '100%',
                    fieldLabel: 'Label',
                    name: 'id'
                },
                {
                    xtype: 'hiddenfield',
                    anchor: '100%',
                    fieldLabel: 'Label',
                    name: 'g_id'
                },
                {
                    xtype: 'checkboxfield',
                    anchor: '100%',
                    boxLabel: 'Показать всё',
                    listeners: {
                        change: 'onCheckboxfieldChange'
                    }
                }
            ]
        }
    ],

    onButtonClick1: function(button, e, eOpts) {
        var me = this,
            form = me.down('form'),
            values = form.getValues(),
            store = Ext.getStore('EvalEffectives.ParamsGroup');

        if (form.isValid()) {
            me.mask('Подождите...');

            Ext.Ajax.request({
                url: 'data/EvalEffectives/ParamsGroup-edit.php',
                params: values,
                success: function(r) {
                    store.load({params:{g_id:values.g_id}});
                }
            });
            me.unmask();
            me.close();
        }
    },

    onButtonClick: function(button, e, eOpts) {
        this.close();
    },

    onCheckboxfieldChange: function(field, newValue, oldValue, eOpts) {
        if(newValue){
            this.getViewModel().getStore('storeParamsGroup').load({
                params:{allow:1}
            });
        }else{
            this.getViewModel().getStore('storeParamsGroup').load();
        }
    }

});
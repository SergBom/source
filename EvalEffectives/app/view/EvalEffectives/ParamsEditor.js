/*
 * File: app/view/EvalEffectives/ParamsEditor.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.2.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.2.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Portal.view.EvalEffectives.ParamsEditor', {
    extend: 'Ext.window.Window',
    alias: 'widget.evaleffectivesparamseditor',

    requires: [
        'Portal.view.EvalEffectives.ParamsEditorViewModel',
        'Portal.view.EvalEffectives.ParamsEditorViewController',
        'Ext.form.FieldSet',
        'Ext.form.field.Date',
        'Ext.form.field.Checkbox',
        'Ext.form.field.Display',
        'Ext.grid.Panel',
        'Ext.grid.column.Number',
        'Ext.form.field.Number',
        'Ext.view.Table',
        'Ext.grid.plugin.CellEditing',
        'Ext.form.field.TextArea'
    ],

    controller: 'evaleffectivesparamseditor',
    viewModel: {
        type: 'evaleffectivesparamseditor'
    },
    modal: true,
    height: 342,
    width: 496,
    layout: 'border',
    bodyPadding: 5,
    title: 'Ввод показателей за день',
    maximizable: true,
    defaultListenerScope: true,

    items: [
        {
            xtype: 'fieldset',
            region: 'north',
            height: 48,
            layout: 'hbox',
            title: 'За какую дату вносим данные',
            items: [
                {
                    xtype: 'datefield',
                    reference: 'dateParams',
                    format: 'Y-m-d'
                },
                {
                    xtype: 'checkboxfield',
                    padding: '0 0 0 5',
                    boxLabel: 'Подтвердите дату',
                    listeners: {
                        change: 'onCheckboxfieldChange'
                    }
                }
            ]
        },
        {
            xtype: 'displayfield',
            region: 'north',
            value: '<img class=\'icon-info\' /><b>!</b> Для изменения данных щелкните дважды по полю "Значение"'
        },
        {
            xtype: 'gridpanel',
            region: 'center',
            reference: 'grid',
            disabled: true,
            bind: {
                store: '{storeParamEditor}'
            },
            columns: [
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'R1',
                    text: 'Показатель'
                },
                {
                    xtype: 'gridcolumn',
                    flex: 1,
                    dataIndex: 'R2',
                    text: 'Расшифровка'
                },
                {
                    xtype: 'numbercolumn',
                    align: 'right',
                    dataIndex: 'value',
                    text: 'Значение',
                    format: '0',
                    editor: {
                        xtype: 'numberfield',
                        minValue: 0
                    }
                }
            ],
            plugins: [
                {
                    ptype: 'cellediting',
                    listeners: {
                        edit: 'onCellEditingEdit'
                    }
                }
            ],
            listeners: {
                selectionchange: {
                    fn: 'onGridpanelSelectionChange',
                    scope: 'controller'
                }
            }
        },
        {
            xtype: 'textareafield',
            region: 'south',
            reference: 'R2',
            height: 80,
            name: 'R2'
        }
    ],
    listeners: {
        afterrender: {
            fn: 'onWindowAfterRender1',
            scope: 'controller'
        },
        close: {
            fn: 'onWindowClose',
            scope: 'controller'
        }
    },

    onCheckboxfieldChange: function(field, newValue, oldValue, eOpts) {
        var ref=this.getReferences();
        ref.grid.setDisabled(oldValue);
        ref.dateParams.setDisabled(newValue);
        if(newValue){
            this.getViewModel().getStore('storeParamEditor').load(
                {params:{
                    dateOtchet:ref.dateParams.getValue()
                }}
            );
        }
    },

    onCellEditingEdit: function(editor, context, eOpts) {
        var d=this.getReferences().dateParams.getValue(),
        s=this.getViewModel().getStore('storeParamEditor');
        //console.log(s);
        Ext.Ajax.request({
            url: 'data/EvalEffectives/ParamsEdit-edit.php',
            params: {
                action:"edit",
                param:context.record.data.R1,
                value:context.record.data.value,
                rec_id:context.record.data.rec_id,
                dateOtchet:d,
                id:context.record.data.id
            },
            success: function(r) {
                s.reload();
            }
        });
    }

});